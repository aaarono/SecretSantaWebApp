services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: secret-santa-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - ./postgresql-database/db-init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PHP Backend API
  php-backend:
    build:
      context: ./php-backend
      dockerfile: Dockerfile
    container_name: secret-santa-api
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: mydb
      DB_USER: user
      DB_PASSWORD: password
    volumes:
      - ./php-backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - app-network

  # WebSocket Server
  websocket-server:
    build:
      context: ./php-backend
      dockerfile: Dockerfile.websocket
    container_name: secret-santa-websocket
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: mydb
      DB_USER: user
      DB_PASSWORD: password
    volumes:
      - ./php-backend:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9090:9090"
    networks:
      - app-network

  # React Frontend
  react-frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    container_name: secret-santa-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080
      REACT_APP_WS_URL: ws://localhost:9090
    depends_on:
      - php-backend
      - websocket-server
    ports:
      - "3000:80"
    networks:
      - app-network

  # Database Admin Interface
  adminer:
    image: adminer
    container_name: secret-santa-adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
